[tool.poetry]
name = "argenta-ia-backend"
version = "1.0.0"
description = "API de análisis de inversiones con AI - Técnico, Fundamental, Macro y Sentimiento"
authors = ["ArgentaIA Team"]
readme = "README.md"
packages = [{include = "services"}, {include = "models"}, {include = "config"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
aiohttp = "^3.9.1"
yfinance = "^0.2.28"
pandas = "^2.1.4"
numpy = "^1.25.2"
transformers = "^4.36.2"
torch = "^2.1.1"
datasets = "^2.15.0"
typing-extensions = "^4.8.0"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
scipy = "^1.11.4"
scikit-learn = "^1.3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
httpx = "^0.25.2"
black = "^23.12.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.8.0"

[tool.poetry.group.optional.dependencies]
ta-lib = {version = "^0.4.25", optional = true}

[tool.poetry.extras]
technical = ["ta-lib"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["services", "models", "config"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto" 